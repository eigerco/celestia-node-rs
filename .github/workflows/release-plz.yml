name: Release-plz

permissions:
  pull-requests: write
  contents: write

on:
  push:
    branches:
      - main

jobs:
  release-plz:
    name: Release-plz
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.RELEASE_PLZ_TOKEN }}

      - name: Install Protoc
        uses: arduino/setup-protoc@v2
        with:
          version: "23.3"
          repo-token: ${{ secrets.GITHUB_TOKEN }}

      - name: Install Rust toolchain
        uses: dtolnay/rust-toolchain@stable

      - name: Install wasm-pack
        uses: jetli/wasm-pack-action@v0.4.0

      - name: Run release-plz
        uses: MarcoIeni/release-plz-action@v0.5
        env:
          GITHUB_TOKEN: ${{ secrets.RELEASE_PLZ_TOKEN }}
          CARGO_REGISTRY_TOKEN: ${{ secrets.CARGO_REGISTRY_TOKEN }}
      - name: Release to npm
        env:
          NPM_REGISTRY_TOKEN: ${{ secrets.NPM_REGISTRY_TOKEN }}
        run: |
          CARGO_VER=$(cargo search lumina-node-wasm | sed -e 's/lumina-node-wasm = "\(.*\)".*/\1/')
          NPM_VER=$(npm show @fl0rek/lumina-node-wasm version)

          echo "Crate version: $CARGO_VER, npm version: $NPM_VER"
          if [ "$CARGO_VER" == "$NPM_VER" ] ; then
            echo Latest cargo version already in npm, exiting
            exit
          fi

          wasm-pack build --target web node-wasm
          wasm-pack publish --target web --access public node-wasm

          cd node-wasm/js
          # make sure versions are set correctly for package and wasm dependency
          npm install -E lumina-node-wasm@$CARGO_VER
          npm version $CARGO_VER
          npm publish --access public
