name: Local celestia devnet
runs:
  using: "composite"
  steps:
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Cache Docker layers
      uses: actions/cache@v4
      with:
        path: ${{ runner.temp }}/.buildx-cache
        key: ${{ runner.os }}-buildx-${{ github.sha }}
        restore-keys: |
          ${{ runner.os }}-buildx-

    - name: Build the docker-compose stack
      shell: bash
      run: |
        cache_from="type=local,src=${{ runner.temp }}/.buildx-cache"
        cache_to="type=local,dest=${{ runner.temp }}/.buildx-cache-new,mode=max"
        cat > ci/cache.json <<EOF
        {
          "target": {
            "validator": {
              "cache-from": ["$cache_from,scope=validator"],
              "cache-to": ["$cache_to,scope=validator"],
              "output": ["type=docker"]
            },
            "bridge-0": {
              "cache-from": ["$cache_from,scope=bridge-0"],
              "cache-to": ["$cache_to,scope=bridge-0"],
              "output": ["type=docker"]
            },
            "bridge-1": {
              "cache-from": ["$cache_from,scope=bridge-1"],
              "cache-to": ["$cache_to,scope=bridge-1"],
              "output": ["type=docker"]
            },
            "grpcwebproxy": {
              "cache-from": ["$cache_from,scope=grpcwebproxy"],
              "cache-to": ["$cache_to,scope=grpcwebproxy"],
              "output": ["type=docker"]
            }
          }
        }
        EOF
        cd ci && docker buildx bake --file docker-compose.yml --file cache.json --load

    # Needed because otherwise cache would grow indefinitely
    # https://github.com/moby/buildkit/issues/1896
    - name: Overwrite cache
      shell: bash
      run: mv ${{ runner.temp }}/.buildx-cache-new ${{ runner.temp }}/.buildx-cache

    - name: Run the docker-compose stack
      shell: bash
      run: docker compose -f ci/docker-compose.yml up --no-build -d

    - name: Generate auth tokens
      shell: bash
      run: ./tools/gen_auth_tokens.sh
